{
  "version": 3,
  "sources": [
    "C:/Users/hanna/algorandweb3/projects/algorandweb3/smart_contracts/hello_world/contract.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGyC;AAA2B;AAAlE;AACyC;AAA6B;AAAtE;AAFF;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;;;AAIE;;AAAA;AAAA;AAAA;;AAAA;AAJF;;;AAAA;;;AAAA;;;AAAA;;;AAIE;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;;;AAJF;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;;AAIE;;;AAHuC;AAIrC;;AAAA;AAHuC;AAIvC;;AAAA;AACO;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAA8B;;;;;;AAA9B;AAAA;;AAAA;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "bytecblock \"passenger\" \"none\" \"destination\""
    },
    "30": {
      "op": "txn ApplicationID",
      "defined_out": [
        "reinterpret_bool%0#0"
      ],
      "stack_out": [
        "reinterpret_bool%0#0"
      ]
    },
    "32": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "35": {
      "op": "bytec_0 // \"passenger\"",
      "defined_out": [
        "\"passenger\""
      ],
      "stack_out": [
        "\"passenger\""
      ]
    },
    "36": {
      "op": "bytec_1 // \"none\"",
      "defined_out": [
        "\"none\"",
        "\"passenger\""
      ],
      "stack_out": [
        "\"passenger\"",
        "\"none\""
      ]
    },
    "37": {
      "op": "app_global_put",
      "stack_out": []
    },
    "38": {
      "op": "bytec_2 // \"destination\"",
      "defined_out": [
        "\"destination\""
      ],
      "stack_out": [
        "\"destination\""
      ]
    },
    "39": {
      "op": "bytec_1 // \"none\"",
      "stack_out": [
        "\"destination\"",
        "\"none\""
      ]
    },
    "40": {
      "op": "app_global_put",
      "stack_out": []
    },
    "41": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "43": {
      "op": "bz main_bare_routing@8",
      "stack_out": []
    },
    "46": {
      "op": "pushbytes 0xaa42d6ac // method \"book(string,string)string\"",
      "defined_out": [
        "Method(book(string,string)string)"
      ],
      "stack_out": [
        "Method(book(string,string)string)"
      ]
    },
    "52": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(book(string,string)string)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(book(string,string)string)",
        "tmp%2#0"
      ]
    },
    "55": {
      "op": "match main_book_route@5",
      "stack_out": []
    },
    "59": {
      "block": "main_after_if_else@12",
      "stack_in": [],
      "op": "pushint 0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "61": {
      "op": "return",
      "stack_out": []
    },
    "62": {
      "block": "main_book_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "64": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "65": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "66": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "68": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "69": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "72": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "75": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "78": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "81": {
      "callsub": "smart_contracts/hello_world/contract.algo.ts::TicketBooking.book",
      "op": "callsub book",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "84": {
      "op": "dup",
      "defined_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "85": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length%0#0"
      ]
    },
    "86": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "as_bytes%0#0"
      ]
    },
    "87": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length_uint16%0#0"
      ]
    },
    "90": {
      "op": "swap",
      "stack_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ]
    },
    "91": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "92": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "98": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ]
    },
    "99": {
      "op": "concat",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "100": {
      "op": "log",
      "stack_out": []
    },
    "101": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "103": {
      "op": "return",
      "stack_out": []
    },
    "104": {
      "block": "main_bare_routing@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "106": {
      "op": "bnz main_after_if_else@12",
      "stack_out": []
    },
    "109": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "111": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "112": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "113": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "115": {
      "op": "return",
      "stack_out": []
    },
    "116": {
      "subroutine": "smart_contracts/hello_world/contract.algo.ts::TicketBooking.book",
      "params": {
        "name#0": "bytes",
        "place#0": "bytes"
      },
      "block": "book",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "119": {
      "op": "bytec_0 // \"passenger\"",
      "defined_out": [
        "\"passenger\""
      ],
      "stack_out": [
        "\"passenger\""
      ]
    },
    "120": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"passenger\"",
        "name#0 (copy)"
      ],
      "stack_out": [
        "\"passenger\"",
        "name#0 (copy)"
      ]
    },
    "122": {
      "op": "app_global_put",
      "stack_out": []
    },
    "123": {
      "op": "bytec_2 // \"destination\"",
      "defined_out": [
        "\"destination\""
      ],
      "stack_out": [
        "\"destination\""
      ]
    },
    "124": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"destination\"",
        "place#0 (copy)"
      ],
      "stack_out": [
        "\"destination\"",
        "place#0 (copy)"
      ]
    },
    "126": {
      "op": "app_global_put",
      "stack_out": []
    },
    "127": {
      "op": "pushbytes \"Ticket booked for \"",
      "defined_out": [
        "\"Ticket booked for \""
      ],
      "stack_out": [
        "\"Ticket booked for \""
      ]
    },
    "147": {
      "op": "frame_dig -2",
      "stack_out": [
        "\"Ticket booked for \"",
        "name#0 (copy)"
      ]
    },
    "149": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "150": {
      "op": "pushbytes \" to \"",
      "defined_out": [
        "\" to \"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\" to \""
      ]
    },
    "156": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "157": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%1#0",
        "place#0 (copy)"
      ]
    },
    "159": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "160": {
      "retsub": true,
      "op": "retsub"
    }
  }
}